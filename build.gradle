version = '0.0.1-SNAPSHOT'

ext {
    mainClass = 'io.amient.enron.Main'
}


apply plugin: 'scala'
apply plugin: 'java'
apply plugin: 'idea'

sourceCompatibility = 1.7

repositories {
    mavenLocal()
    mavenCentral()
}

configurations {
    provided
    testCompile.extendsFrom provided
}

sourceSets {
    main {
        compileClasspath += [configurations.provided]
    }
}

idea {
    module {
        scopes.PROVIDED.plus += [configurations.provided]
    }
}

task scalaTest(dependsOn: ['testClasses'] , type:JavaExec ) {
    main = 'org.scalatest.tools.Runner'
    args = ['-R', 'build/classes/test', '-o']
    classpath = sourceSets.test.runtimeClasspath
}
test.dependsOn scalaTest
test.systemProperties 'property': 'value'

dependencies {
    compile group: 'org.scala-lang', name: 'scala-library', version:'2.11.7'
    compile group: 'org.scala-lang', name: 'scala-xml', version: '2.11.0-M4'
    testCompile group: 'org.scalatest', name: 'scalatest_2.11', version: '2.2.6'
    testCompile group: 'org.scalacheck', name: 'scalacheck_2.11', version: '1.12.5'
    //
    compile group: 'org.apache.commons', name: 'commons-io', version: '1.3.2'

}


jar {
    manifest {
        attributes 'Main-Class': mainClass
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task createStartScripts(type: CreateStartScripts) {
    outputDir = file("build/scripts")
    mainClassName = mainClass
    applicationName = "enronapp"
    classpath = jar.outputs.files
}

build.dependsOn createStartScripts
libsDirName = 'lib'


task wrapper(type: Wrapper) {
    gradleVersion = '2.7'
}
